{
  "hash": "1225e51aaccb88e07a9fefb4d2092ebe",
  "result": {
    "markdown": "---\ntitle: \"Los pingüinos molan\"  #- título\ndate: 2022-11-24              #- ISO8601 YYYY-MM-DD format \ndate-format: short\nformat: \n  revealjs:\n    scrollable: true\n    slide-level: 2\n    height: 900\n    width: 1600\n    toc: false\n    center-title-slide: true\n    title-slide-attributes: #- atributos para la slide de titulo\n      data-background-color: \"#562457\"   #- color de R-ladies\n    preview-links: auto  #- true: abre un iframe en lugar de abrir ventana\n    link-external-newwindow: true\n    transition: fade\n    fontcolor: \"#262d36\"\n    highlight-style: a11y\n    code-line-numbers: true\n    number-sections: false\n    slide-number: c/t  \n    incremental: false   \nfooter: |\n  Slides hechas con [Quarto](https://quarto.org/) \n#theme: moon\n---\n\n\n\n\n## Intro \n\nVamos a utilizar datos del paquete `palmerpenguins`. El repo del paquete en CRAN está [aquí](https://cran.r-project.org/web/packages/palmerpenguins/index.html), el repo de Github está [aquí](https://github.com/allisonhorst/palmerpenguins) y la página web del paquete está [aquí](https://allisonhorst.github.io/palmerpenguins/).\n\nLos datos se pueden cargar en la memoria de de R/RStudio de esta forma:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndf <- palmerpenguins::penguins\n```\n:::\n\n\n\nEl dataset contiene observaciones sobre un conjunto de 344 pingüinos de 3 especies. Hay  8 variables.\n\n---\n\n## Los pingüinos molan\n\nVamos a ver una foto de un pingüinos\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n![Un pingüino chulo](https://upload.wikimedia.org/wikipedia/commons/a/a9/Ping%C3%BCinos.JPG?20090406212143)\n\n\n\n---\n\n## Algunos gráficos\n\n\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nArreglo los datos\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#- cojos datos de pingüinos y arreglo un poco \ndf <- palmerpenguins::penguins %>% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %>% \n  tidyr::drop_na()\n```\n:::\n\n\n---\n\n### Primer gráfico\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#- primer gráfico\np <- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n```\n\n::: {.cell-output-display}\n![](my_slides_BigData_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n---\n\n### Segundo\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#- segundo gráfico\np <- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n```\n\n::: {.cell-output-display}\n![](my_slides_BigData_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n---\n\n### El último\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n```\n\n::: {.cell-output-display}\n![](my_slides_BigData_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=95%}\n:::\n:::\n",
    "supporting": [
      "my_slides_BigData_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}